class Solution {
    int count;
    public int countArrangement(int n) {
        boolean[] visited=new boolean[n+1];
        count=0;
        findPermutationsSwapping(1,n,visited);
        return count;
    }
    private void findPermutationsSwapping(int index,int n,boolean[] visited){
        if(index>n){
            count++;
            return;
        }
        for(int i=1;i<=n;i++){
            if(!visited[i] && (index%i==0 || i%index==0)){
                visited[i]=true;
                findPermutationsSwapping(index+1,n,visited);//putting every element at each index
                visited[i]=false;//backtrack
            }
        }
    }
}