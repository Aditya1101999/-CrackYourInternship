class Solution
{
    //Function to find the maximum number of cuts.
    public int maximizeCuts(int n, int x, int y, int z)
    {
        int[] dp=new int[n+1];
        Arrays.fill(dp,-1);
        int ans=solve(n,x,y,z,dp);
        return ans==Integer.MIN_VALUE ? 0 : ans;
    }
    private int solve(int n, int x, int y, int z,int[] dp){
        if(n==0) return 0;
        if(dp[n]!=-1) return dp[n];
        int xPath = n >= x ? solve(n - x, x, y, z, dp) : Integer.MIN_VALUE;
        int yPath = n >= y ? solve(n - y, x, y, z, dp)  : Integer.MIN_VALUE;
        int zPath = n >= z ? solve(n - z, x, y, z, dp)  : Integer.MIN_VALUE;
        int ans=Math.max(xPath,Math.max(yPath,zPath));
        return dp[n] = (ans == Integer.MIN_VALUE) ? ans : ans+1;
    }
}
