package Graph;

class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        ArrayList<Integer>dfs=new ArrayList<>();
        boolean[] visited=new boolean[V];
        dfs(V,adj,dfs,visited,0);
        return dfs;
    }
    private void dfs(int V, ArrayList<ArrayList<Integer>> adj,ArrayList<Integer>dfs,boolean[] visited,int node){
        if(!visited[node]){
            visited[node]=true;
            dfs.add(node);
            for(int el : adj.get(node)){
                dfs(V,adj,dfs,visited,el);
            }
        }
    }
}