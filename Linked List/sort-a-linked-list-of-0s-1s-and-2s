class Solution {
    // Function to sort a linked list of 0s, 1s and 2s.
    static Node segregate(Node head) {
        Node zeroD=new Node(-1);
       Node oneD=new Node(-1);
       Node twoD=new Node(-1);
       Node zero=zeroD;
       Node one=oneD;
       Node two=twoD;
       Node curr=head;
       while(curr!=null){
           if(curr.data==0){
               zero.next=curr;
               zero=zero.next;
           }
           else if(curr.data==1){
               one.next=curr;
               one=one.next;
           }
           else{
               two.next=curr;
               two=two.next;
           }
           curr=curr.next;
       }
       zero.next=(oneD.next!=null) ? oneD.next : twoD.next;
       one.next = twoD.next;
       two.next=null;
       return zeroD.next;
    }
}