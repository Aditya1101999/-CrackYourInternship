package Sorting and Searching;

class Solution {
    public int maxDistance(int[] position, int m) {
        int n=position.length;
        Arrays.sort(position);
        int low=1;
        int high=position[n-1]-position[0];
        while(low<=high){
            int mid=low+(high-low)/2;
            if(canPlace(position,m,mid)){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return high;
    }
    private boolean canPlace(int[] position,int m,int distance){
        int balls=1;
        int lastPlaced=position[0];
        for(int i=1;i<position.length;i++){
            if(position[i]>=lastPlaced+distance){
                balls++;
                lastPlaced=position[i];
            }
        }
        return balls>=m;
    }
}