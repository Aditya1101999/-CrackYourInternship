class Solution
{
    //Function to find the smallest window in the string s consisting
    //of all the characters of string p.
    public static String smallestWindow(String s, String p)
    {
        int[] freq=new int[26];
        for(char c : p.toCharArray()){
            freq[c-'a']++;
        }
        int n=s.length();
        int start=0;
        int minLen=Integer.MAX_VALUE;
        int left=0;
        int right=0;
        int counter=p.length();
        while(right<n){
            char c=s.charAt(right);
            if(freq[c-'a']>0){
                counter--;
            }
            freq[c-'a']--;
            while(counter==0){
                int currLen=right-left+1;
                if(minLen>currLen){
                    minLen=currLen;
                    start=left;
                }
                int leftChar=s.charAt(left);
                freq[leftChar-'a']++;
                if(freq[leftChar-'a']>0){
                    counter++;
                }
                left++;
            }
            right++;
        }
        return minLen==Integer.MAX_VALUE ? "-1" : s.substring(start,start+minLen); 
    }
}