class Solution {
    int count;
    public int pathSum(TreeNode root, int targetSum) {
        count=0;
        Map<Long,Integer>map=new HashMap<>();
        map.put(0L,1);
        dfs(root,targetSum,0L,map);
        return count;
    }
    private void dfs(TreeNode root,int targetSum,long sum,Map<Long,Integer>map){
        if(root==null) return;
        
        sum+=root.val;
        if(map.containsKey(sum-targetSum)){
            count+=map.get(sum-targetSum);
        }
        map.put(sum,map.getOrDefault(sum,0)+1);
        dfs(root.left,targetSum,sum,map);
        dfs(root.right,targetSum,sum,map);
        map.put(sum,map.get(sum)-1);
    }
}